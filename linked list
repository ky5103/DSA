#include <stdio.h>
#include <stdlib.h>
struct node {
	int info;
	struct node* link;
};
struct node* start = NULL;
void createlist()
{
	if (start == NULL) {
		int n;
		printf("\nEnter the number of nodes: ");
		scanf("%d", &n);
		if (n != 0) {
			int data;
			struct node* newnode;
			struct node* temp;
			newnode = malloc(sizeof(struct node));
			start = newnode;
			temp = start;
			printf("\nEnter number to"
				" be inserted : ");
			scanf("%d", &data);
			start->info = data;

			for (int i = 2; i <= n; i++) {
				newnode = malloc(sizeof(struct node));
				temp->link = newnode;
				printf("\nEnter number to"
					" be inserted : ");
				scanf("%d", &data);
				newnode->info = data;
				temp = temp->link;
			}
		}
		printf("\nThe list is created\n");
	}
	else
		printf("\nThe list is already created\n");
}
void traverse()
{
	struct node* temp;
	if (start == NULL)
		printf("\nList is empty\n");
	else {
		temp = start;
		while (temp != NULL) {
			printf("Data = %d\n", temp->info);
			temp = temp->link;
		}
	}
}
void insert()
{
	struct node *temp, *newnode;
	int pos, data, i = 1;
	newnode = malloc(sizeof(struct node));
	printf("\nEnter position and data :");
	scanf("%d %d", &pos, &data);
	temp = start;
	newnode->info = data;
	newnode->link = 0;
	while (i < pos - 1) {
		temp = temp->link;
		i++;
	}
	newnode->link = temp->link;
	temp->link = newnode;
}
void delete()
{
	struct node *temp, *position;
	int i = 1, pos;
	if (start == NULL)
		printf("\nList is empty\n");
	else {
		printf("\nEnter index : ");
		scanf("%d", &pos);
		position = malloc(sizeof(struct node));
		temp = start;
		while (i < pos - 1) {
			temp = temp->link;
			i++;
		}
		position = temp->link;
		temp->link = position->link;
		free(position);
	}
}
void sort()
{
	struct node* current = start;
	struct node* index = NULL;
	int temp;
	if (start == NULL) {
		return;
	}
	else {
		while (current != NULL) {
			index = current->link;
			while (index != NULL) {
				if (current->info > index->info) {
					temp = current->info;
					current->info = index->info;
					index->info = temp;
				}
				index = index->link;
			}
			current = current->link;
		}
	}
}

void search()
{
	int found = -1;
	struct node* tr = start;
	if (start == NULL) {
		printf("Linked list is empty\n");
	}
	else {
		printf("\nEnter the element you want to search: ");
		int key;
		scanf("%d", &key);
		while (tr != NULL) {
			if (tr->info == key) {
				found = 1;
				break;
			}
			else {
				tr = tr->link;
			}
		}
		if (found == 1) {
			printf(
				"Yes, %d is present in the linked list.\n",
				key);
		}
		else {
			printf("No, %d is not present in the linked "
				"list.\n",
				key);
		}
	}
}
int main()
{
	int choice;
	while (1) {
    	printf("\n\t1 create a list \n");
		printf("\n\t2 To see list \n");
		printf("\t3 For insertion \n");
		printf("\t4 For deletion of element \n");
		printf("\t5 To sort element \n");
		printf("\t6 Search an element \n");
		printf("\t7 To exit \n");
		printf("\nEnter Choice :\n");
		scanf("%d", &choice);

		switch (choice) {
		case 1:
		    createlist();
		    break;
		case 2:
			traverse();
			break;
		case 3:
			insert();
			break;
		case 4:
			delete();
			break;
		case 5:
			sort();
			break;
		case 6:
			search();
			break;
		case 7:
			exit(1);
			break;
		default:
			printf("Incorrect Choice\n");
		}
	}
	return 0;
}
